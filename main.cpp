#include<bits/stdc++.h>
using namespace std;

int main(){   
    freopen("./TOF_large.txt", "r", stdin);
    freopen("./output_large.txt", "w", stdout);

    int t;cin>>t;
    for(int i=1;i<=t;i++){
        int numTrees,d;
        cin>>numTrees>>d;

        // trees with their groeing days and  their income at the end of given days
        vector<vector<int>> trees = {
            {12000,10}, {10000,6},{27500,15},{7500,5},{8000,15}
        };

        vector<int> income; //income generated by each tree after 'd' days
        
        // finding income at the end of d days
        for(auto i:trees){
            long long inc = i[0]*(d/i[1]);
            income.push_back(inc);
        }

        sort(income.begin(),income.end(),greater<int>());

        long long totalIncome = 0;
        int treeRemained = numTrees;
        //adding income of each tree because all type of at least one tree is compulsory to grow
        for(auto i:income){
            totalIncome += i;
            treeRemained--;
        }
        //adding the max income given trees
        int maxNumTree = (numTrees * 0.4) - 1;
        int idx = 0;
        while(treeRemained > 0){
            if(treeRemained > maxNumTree){
                totalIncome += (income[idx]*maxNumTree);
                treeRemained -= maxNumTree;
            }else{
                totalIncome += (income[idx]*treeRemained);
                treeRemained = 0;
            }
            idx++;
        }
        cout<<"Case #"<<i<<": "<<totalIncome<<endl;
    }
    return 0;
}